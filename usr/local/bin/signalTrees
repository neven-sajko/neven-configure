#! /bin/sh

# Sends a signal to every root of a chromium process tree, or a tree made of processes whose names match "$target"*. So this might not do what you want if you started Chrome from a process whose name also matches chrom*.
#
# Note: if your goal is just to kill Chromium safely, killing chrome-sandbox's parent could work, too.

command='kill -s TERM'
target='chrom'

######################################################################

set -u

# Are the 'x's necessary to guard from empty variables? TODO

strEq () {
	true=0
	false=1

	case "$#" in
	1)
		return "$false"
		;;
	esac

	case "x$2" in
	"x$1"*)
		return "$true"
		;;
	esac
	return "$false"
}

# Returns the PID of the root of the tree of processes with same argv0 as $1, whose argv0 is assumed to be $target.
rootOf () {
	tmpPID="$1"
	ppid=`ps -p "$tmpPID" -o 'ppid='`
	IFS=' '
	while strEq "$target" `ps -p $ppid -o 'comm='`; do
		tmpPID=$ppid
		ppid=`ps -p $ppid -o 'ppid='`
	done
	echo "$tmpPID"
}

# Returns true if $1 is not in rest of $@.
piuztfvbnk () {
	true=0
	false=1

	t="$1"
	shift

	for v in "$@"; do
		case "x$v" in
		"x$t")
			return "$false"
			;;
		esac
	done

	return "$true"
}

targetList=

IFS=' 	
'
for pid in `ps -A -o 'pid='`; do
	if strEq "$target" `ps -p "$pid" -o 'comm='`; then
		root=`rootOf "$pid"`
		if piuztfvbnk "$root" $targetList; then
			targetList="$targetList $root"
		fi
	fi
done



case "x$targetList" in
x)
	echo 'No processes found.' 1>&2
	exit 15
	;;
esac

IFS=' '
$command $targetList
